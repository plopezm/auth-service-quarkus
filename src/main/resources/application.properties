# Service configuration
org.aeox.auth.issuer=https://auth.aeox.org

# Openapi configuration
quarkus.smallrye-openapi.path=/docs/openapi
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/docs/swagger

# datasource configuration PROD
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = postgres
quarkus.datasource.password = postgres
quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/auth-service


# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=update

# JWT
mp.jwt.verify.publickey.location=public.pem
smallrye.jwt.sign.key-location=private.pem



# DEV Properties
# ==============================================================

# Datasource
%dev.quarkus.datasource.db-kind = h2
%dev.quarkus.datasource.username = sa
%dev.quarkus.datasource.password =
%dev.quarkus.datasource.jdbc.url = jdbc:h2:mem:auth-servicetestdb;DB_CLOSE_ON_EXIT=FALSE
%dev.quarkus.hibernate-orm.database.generation=drop-and-create

# JWT
%dev.mp.jwt.verify.publickey.location=META-INF/resources/public.pem
%dev.smallrye.jwt.sign.key-location=private.pem


# TEST Properties
# ===============================================================

# datasource
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.username=sa
%test.quarkus.datasource.password=
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:testdb;DB_CLOSE_ON_EXIT=FALSE
%test.quarkus.hibernate-orm.database.generation=drop-and-create

# JWT
%test.mp.jwt.verify.publickey.location=META-INF/resources/public.pem
%test.smallrye.jwt.sign.key-location=private.pem